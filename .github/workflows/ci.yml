name: CI

on:
  pull_request:       # trigger on pull requests
  push:
    branches:         # array of glob patterns matching against refs/heads. Optional; defaults to all
      - master        # triggers on pushes that contain changes in master

jobs:
  build:
    name: Build

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        build: [linux, macos, windows]
        include:
          - build: linux
            os: ubuntu-latest
            rust: 1.46.0
          - build: macos
            os: macos-latest
            rust: 1.46.0
          - build: windows
            os: windows-latest
            rust: 1.46.0

    steps:
    - uses: actions/checkout@v1
    - name: Cache cargo registry
      uses: actions/cache@v1
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
    - name: Cache cargo index
      uses: actions/cache@v1
      with:
        path: ~/.cargo/git
        key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
    - name: Cache cargo build
      uses: actions/cache@v1
      with:
        path: target
        key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
    - name: Install windows dependencies (scoop)
      run: |
        iwr -useb get.scoop.sh | iex
        echo "::add-path::$($HOME)/scoop/shims"
        scoop install llvm
        echo "::set-env name=LIBCLANG_PATH::$($HOME)/scoop/apps/llvm/current/bin"
      if: matrix.os == 'windows-latest'
    - name: Build
      run: cargo build --verbose
    - name: Run tests
      run: cargo test --verbose

  rustfmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Install Rust
      run: |
        rustup component add rustfmt
        cargo fmt -- --check

  clippy_check:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - run: rustup component add clippy
      - uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features